generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id           Int     @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String
  phone        String
  storeId      Int     @default(1)
  orders       Order[]
}

model Order {
  id         Int         @id @default(autoincrement())
  customerId Int
  totalPrice Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?    @updatedAt
  notes      String?
  storeId    Int
  paymentLinkId String?   // Square's unique payment link ID
  paymentStatus PaymentStatus @default(PENDING)
  customer   Customer    @relation(fields: [customerId], references: [id])
  items      OrderItem[]
  shippingLabels ShippingLabel[]
}

model OrderItem {
  id        Int        @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  size      String
  isAddBack Boolean?   @default(false)
  playerName   String?
  playerNumber String? 
  category  Categories @default(TSHIRTS)
  color     String     @default("black")
  material     String  @default("cotton")
  price     Float      @default(20.00)
  title     String     @default("Retro")
  notes     String?
  productImage String?
  order     Order      @relation(fields: [orderId], references: [id])
}

model ShippingLabel {
  id             String   @id @default(uuid())
  orderId        Int   // Assuming you have an Order model and orderId is a string
  rateId         String
  labelUrl       String
  trackingNumber String
  createdAt      DateTime @default(now())
  order          Order    @relation(fields: [orderId], references: [id])
}


enum Categories {
  TSHIRTS
  HOODIES
  LONG_SLEEVE
  BOTTOMS
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}